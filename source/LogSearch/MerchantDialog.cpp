//----------------------------------------------------------------------------
//  Project LogSearch
//  Secure Payment Systems
//  Copyright © 1996. All Rights Reserved.
//
//  SUBSYSTEM:    LogSearch.apx Application
//  FILE:         merchantdialog.cpp
//  AUTHOR:       Jack Ely
//
//  OVERVIEW
//  ~~~~~~~~
//  Source file for implementation of MerchantDialog (TDialog).
//
//----------------------------------------------------------------------------
#include "win4me.h"

#include <stdio.h>
#include "merchantdialog.h"
#include "SpsManDb.h"
#include "CheckAuthFn.h"
#include "CheckService.h"
#include "unsnum.h"

//{{MerchantDialog Implementation}}

#define STATIC(name) name=new TStatic(this,IDC_##name)
#define RADIOBUTTON(name) name = new TRadioButton(this,IDC_##name)
#define CHECKBOX(name) name = new TCheckBox(this,IDC_##name)

MerchantDialog::MerchantDialog(TWindow* parent,ProductClassList* PCList)
:
 TDialog(parent, IDD_MERCHANT),
 productList(PCList)
{
 STATIC(VFYSECRULES);
 STATIC(GUSECRULES);
 STATIC(VFYPOSFILERULES);
 STATIC(VFYRESPMSG);
 STATIC(VFYDATAREQ);
 STATIC(VFYAUTHRULESSUBCLASS);
 STATIC(VFYAUTHRULESCLASS);
 STATIC(GUPOSFILERULES);
 STATIC(GURESPMSG);
 STATIC(GUDATAREQ);
 STATIC(GUAUTHRULESSUBCLASS);
 STATIC(GUAUTHRULESCLASS);
 STATIC(MERCHANTTIMEZONE);
 STATIC(MERCHANTNAM);
 STATIC(MERCHANTNUM);
 STATIC(MERCHANTZIP);
 STATIC(MERCHANTSTATE);
 STATIC(MERCHANTSIC);
 STATIC(PRODUCTGROUP);

  // SERVICES
 RADIOBUTTON(VERIFYSERVICE);
 RADIOBUTTON(HOLDCHECKSERVICE);
 RADIOBUTTON(PREAUTHSERVICE);
 RADIOBUTTON(GUARANTEESERVICE);
 RADIOBUTTON(GUARANTEEVERIFYSERVICE);

 // FED RESERVE REGION CHECKBOXES
 CHECKBOX(FEDREG1);
 CHECKBOX(FEDREG2);
 CHECKBOX(FEDREG3);
 CHECKBOX(FEDREG4);
 CHECKBOX(FEDREG5);
 CHECKBOX(FEDREG6);
 CHECKBOX(FEDREG7);
 CHECKBOX(FEDREG8);
 CHECKBOX(FEDREG9);
 CHECKBOX(FEDREG10);
 CHECKBOX(FEDREG11);
 CHECKBOX(FEDREG12);

 STATIC(VERIFYSERVICEAMOUNT);
 STATIC(PREAUTHDAYS);
 STATIC(PREAUTHAMOUNT);
 STATIC(HOLDCHECKAMOUNT);
 STATIC(HOLDCHECKVALUEPERCENT);
 STATIC(HOLDCHECK1PERCENT);
}


MerchantDialog::~MerchantDialog()
{
  Destroy(IDCANCEL);
}

#define CPYCLASS(cname,rname) cname->Transfer(Rec->Classes.rname,tdSetData)
#define CPYSTATIC(cname,rname) cname->Transfer(Rec->rname,tdSetData);
#define CPYSTATICNUM(cname,rname) if ( isEmpty(Rec->rname) || Rec->rname==0 )\
                                   cname->Clear();\
                                  else\
                                   {\
                                    sprintf(fmtBuf,"%d",Rec->rname);\
                                    cname->Transfer(fmtBuf,tdSetData);\
                                   }

#define CPYCHECKBOX(cname,reg) if ( (1<<reg) & Rec->FedRegionBits )\
                                 cname->Check()

void MerchantDialog::Display(IPCMessage* Msg)
{
 MerchantRecord* Rec = (MerchantRecord*)Msg->GetFldPtr(FN_MERCHANTRECORD);
 char fmtBuf[20];
 char *ptr;

 clearAll();

 if ( Rec==NULL )
   return;

 CPYCLASS(VFYSECRULES,VFYUnvFundsRules);
 CPYCLASS(GUSECRULES,GUUnvFundsRules);
 CPYCLASS(VFYPOSFILERULES,VFYPosFileRules);
 CPYCLASS(VFYRESPMSG,VFYRespMsg);
 CPYCLASS(VFYDATAREQ,VFYDataReq);
 CPYCLASS(VFYAUTHRULESSUBCLASS,VFYAuthRulesSub);
 CPYCLASS(VFYAUTHRULESCLASS,VFYAuthRules);
 CPYCLASS(GUPOSFILERULES,GUPosFileRules);
 CPYCLASS(GURESPMSG,GURespMsg);
 CPYCLASS(GUDATAREQ,GUDataReq);
 CPYCLASS(GUAUTHRULESSUBCLASS,GUAuthRulesSub);
 CPYCLASS(GUAUTHRULESCLASS,GUAuthRules);

 MERCHANTTIMEZONE->Transfer(timeZoneInfo.GetInfo(Rec->MerchantTimeZone),
                                tdSetData);

 // SERVICES
 switch( Rec->MerchantService )
  {
   case CHECKSERVICE_GUARANTEE: GUARANTEESERVICE->Check(); break;
   case CHECKSERVICE_VERIFY: VERIFYSERVICE->Check(); break;
   case CHECKSERVICE_PREAUTH: PREAUTHSERVICE->Check(); break;
   case CHECKSERVICE_HOLDCHECK: HOLDCHECKSERVICE->Check(); break;
   case CHECKSERVICE_GUARANTEEVERIFY: GUARANTEEVERIFYSERVICE->Check(); break;
  }

 // FED RESERVE REGION CHECKBOXES
 CPYCHECKBOX(FEDREG1,1);
 CPYCHECKBOX(FEDREG2,2);
 CPYCHECKBOX(FEDREG3,3);
 CPYCHECKBOX(FEDREG4,4);
 CPYCHECKBOX(FEDREG5,5);
 CPYCHECKBOX(FEDREG6,6);
 CPYCHECKBOX(FEDREG7,7);
 CPYCHECKBOX(FEDREG8,8);
 CPYCHECKBOX(FEDREG9,9);
 CPYCHECKBOX(FEDREG10,10);
 CPYCHECKBOX(FEDREG11,11);
 CPYCHECKBOX(FEDREG12,12);

 // EDIT FIELDS
 CPYSTATIC(MERCHANTZIP,MerchantZip);
 CPYSTATIC(MERCHANTSTATE,MerchantState);
 CPYSTATIC(MERCHANTNAM,MerchantName);
 CPYSTATIC(MERCHANTNUM,MerchantID);
 CPYSTATIC(MERCHANTSIC,MerchantSic);

 if ( (ptr=productList->FindName(Rec->ProductGroup)) != NULL )
  PRODUCTGROUP->Transfer(ptr,tdSetData);
 else
  PRODUCTGROUP->Clear();

 CPYSTATICNUM(VERIFYSERVICEAMOUNT,VerifyAmount);
 CPYSTATICNUM(PREAUTHDAYS,PreauthDays);
 CPYSTATICNUM(PREAUTHAMOUNT,PreauthAmount);
 CPYSTATICNUM(HOLDCHECKAMOUNT,HoldCheckAmount);
 CPYSTATICNUM(HOLDCHECKVALUEPERCENT,HoldCheckValuePercent);
 CPYSTATICNUM(HOLDCHECK1PERCENT,HoldCheck1Percent);
}

#define CLRSTATIC(name) name->Clear()
#define CLRRADIOBUTTON(name) name->SetCheck(BF_UNCHECKED)
#define CLRCHECKBOX(name) name->SetCheck(BF_UNCHECKED)


void MerchantDialog::clearAll()
{
 CLRSTATIC(VFYSECRULES);
 CLRSTATIC(GUSECRULES);
 CLRSTATIC(VFYPOSFILERULES);
 CLRSTATIC(VFYRESPMSG);
 CLRSTATIC(VFYDATAREQ);
 CLRSTATIC(VFYAUTHRULESSUBCLASS);
 CLRSTATIC(VFYAUTHRULESCLASS);
 CLRSTATIC(GUPOSFILERULES);
 CLRSTATIC(GURESPMSG);
 CLRSTATIC(GUDATAREQ);
 CLRSTATIC(GUAUTHRULESSUBCLASS);
 CLRSTATIC(GUAUTHRULESCLASS);
 CLRSTATIC(MERCHANTTIMEZONE);

  // SERVICES
 CLRRADIOBUTTON(VERIFYSERVICE);
 CLRRADIOBUTTON(HOLDCHECKSERVICE);
 CLRRADIOBUTTON(PREAUTHSERVICE);
 CLRRADIOBUTTON(GUARANTEESERVICE);
 CLRRADIOBUTTON(GUARANTEEVERIFYSERVICE);

 // FED RESERVE REGION CHECKBOXES
 CLRCHECKBOX(FEDREG1);
 CLRCHECKBOX(FEDREG2);
 CLRCHECKBOX(FEDREG3);
 CLRCHECKBOX(FEDREG4);
 CLRCHECKBOX(FEDREG5);
 CLRCHECKBOX(FEDREG6);
 CLRCHECKBOX(FEDREG7);
 CLRCHECKBOX(FEDREG8);
 CLRCHECKBOX(FEDREG9);
 CLRCHECKBOX(FEDREG10);
 CLRCHECKBOX(FEDREG11);
 CLRCHECKBOX(FEDREG12);

 // EDIT FIELDS
 CLRSTATIC(MERCHANTZIP);
 CLRSTATIC(MERCHANTSTATE);
 CLRSTATIC(MERCHANTNAM);
 CLRSTATIC(MERCHANTNUM);
 CLRSTATIC(MERCHANTSIC);

 CLRSTATIC(VERIFYSERVICEAMOUNT);
 CLRSTATIC(PREAUTHDAYS);
 CLRSTATIC(PREAUTHAMOUNT);
 CLRSTATIC(HOLDCHECKAMOUNT);
 CLRSTATIC(HOLDCHECKVALUEPERCENT);
 CLRSTATIC(HOLDCHECK1PERCENT);
}


